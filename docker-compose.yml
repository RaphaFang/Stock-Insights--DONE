services:
  kafka:
    image: "bitnami/kafka:latest"
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 4G
      placement:
        constraints:
          - "node.hostname == ip-10-0-1-138"
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_CFG_NODE_ID: "1"
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka_stack_kafka:9092 # swarm版本需要的
      # KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092 # 本地適用
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_LOG_DIRS: /bitnami/kafka/data
      KAFKA_CFG_KRAFT_MODE: "true"
      KAFKA_CFG_KRAFT_STORAGE_ROOT_DIR: /bitnami/kafka/data
      KAFKA_CFG_KRAFT_METADATA_LOG_DIRS: /bitnami/kafka/meta
      KAFKA_OPTS: "-Duser.timezone=Asia/Taipei"
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_LOG_RETENTION_MINUTES: "5"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - kafka_data:/bitnami/kafka
    # 要考慮不要設定，不然log太多
    networks:
      - kafka-net
    # healthcheck:
    #   test: ["CMD", "/opt/bitnami/kafka/bin/kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5

  kafka-app:
    image: raphafang/kafka-app:latest

    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka_stack_kafka:9092 # swarm版本需要的
      # KAFKA_BROKER: kafka:9092 # 本地適用
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: 3G
      placement:
        constraints:
          - "node.hostname == ip-10-0-1-138"
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: overlay
    attachable: true
volumes:
  kafka_data:
    driver: local
# 本地------------------------------------------
# networks:
#   kafka-net:
#     driver: bridge
